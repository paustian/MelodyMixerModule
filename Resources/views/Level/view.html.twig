{# purpose of this template: levels list view #}
{% extends routeArea == 'admin' ? '@PaustianMelodyMixerModule/adminBase.html.twig' : '@PaustianMelodyMixerModule/base.html.twig' %}
{% trans_default_domain 'level' %}
{% block title own ? 'My levels'|trans : 'Levels list'|trans %}
{% block admin_page_icon 'list-alt' %}
{% block content %}
    <div class="paustianmelodymixermodule-level paustianmelodymixermodule-view">
        {% set viewActions = knp_menu_get('paustianMelodyMixerMenuViewActions', [], {objectType: 'level', area: routeArea}) %}
        {{ knp_menu_render(viewActions, {template: '@ZikulaMenuModule/Override/bootstrap_fontawesome.html.twig'}) }}
        
        {{ include('@PaustianMelodyMixerModule/Level/viewQuickNav.html.twig', {workflowStateFilter: false}) }}{# see template file for available options #}

        {% if routeArea == 'admin' %}
        <form action="{{ path('paustianmelodymixermodule_level_' ~ routeArea ~ 'handleselectedentries') }}" method="post" id="levelsViewForm">
            <div>
        {% endif %}
            <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover{% if routeArea == 'admin' %} table-condensed{% endif %}">
                <colgroup>
                    {% if routeArea == 'admin' %}
                        <col id="cSelect" />
                    {% endif %}
                    <col id="cItemActionsStart" />
                    <col id="cLevelName" />
                    <col id="cDisplayGraphicLevelId" />
                </colgroup>
                <thead>
                <tr>
                    {% if routeArea == 'admin' %}
                        <th id="hSelect" scope="col" class="text-center">
                            <input type="checkbox" class="paustianmelodymixer-mass-toggle" />
                        </th>
                    {% endif %}
                    <th id="hItemActionsStart" scope="col" class="">{% trans from 'messages' %}Actions{% endtrans %}</th>
                    <th id="hLevelName" scope="col" class="text-left">
                        <a href="{{ sort.levelName.url }}" title="{{ 'Sort by %fieldName%'|trans({'%fieldName%': 'level name'}, 'messages')|e('html_attr') }}" class="{{ sort.levelName.class }}">{% trans %}Level name{% endtrans %}</a>
                    </th>
                    <th id="hDisplayGraphicLevelId" scope="col" class="text-right">
                        <a href="{{ sort.displayGraphicLevelId.url }}" title="{{ 'Sort by %fieldName%'|trans({'%fieldName%': 'display graphic level id'}, 'messages')|e('html_attr') }}" class="{{ sort.displayGraphicLevelId.class }}">{% trans %}Display graphic level id{% endtrans %}</a>
                    </th>
                </tr>
                </thead>
                <tbody>
            
            {% for level in items %}
                <tr>
                    {% if routeArea == 'admin' %}
                        <td headers="hSelect" class="text-center">
                            <input type="checkbox" name="items[]" value="{{ level.getKey() }}" class="paustianmelodymixer-toggle-checkbox" />
                        </td>
                    {% endif %}
                    <td id="itemActions{{ level.getKey() }}Start" headers="hItemActionsStart" class="actions">
                        {% set itemActions = knp_menu_get('paustianMelodyMixerMenuItemActions', [], {entity: level, area: routeArea, context: 'view'}) %}
                        <div class="dropdown item-actions">
                            <a id="itemActions{{ level.getKey() }}DropDownToggleStart" role="button" data-toggle="dropdown" href="javascript:void(0);" class="d-none dropdown-toggle"><i class="fas fa-tasks"></i></a>
                            {{ knp_menu_render(itemActions, {template: '@ZikulaMenuModule/Override/bootstrap_fontawesome.html.twig'}) }}
                        </div>
                    </td>
                    <td headers="hLevelName" class="text-left">
                        {{ level.levelName }}
                    </td>
                    <td headers="hDisplayGraphicLevelId" class="text-right">
                        {{ level.displayGraphicLevelId }}
                    </td>
                </tr>
            {% else %}
                <tr class="table-info">
                    <td colspan="{% if routeArea == 'admin' %}4{% else %}3{% endif %}" class="text-center">
                {% trans %}No levels found.{% endtrans %}
                  </td>
                </tr>
            {% endfor %}
            
                </tbody>
            </table>
            </div>
            
            {% if all != 1 %}
                {{ include(paginator.template) }}
            {% endif %}
        {% if routeArea == 'admin' %}
                <fieldset class="my-3 pt-3">
                    <div class="row">
                        <label for="paustianMelodyMixerModuleAction" class="col-md-3 col-form-label">{% trans %}With selected levels{% endtrans %}</label>
                        <div class="col-md-6">
                            <select id="paustianMelodyMixerModuleAction" name="action" class="form-control form-control-sm">
                                <option value="">{% trans from 'messages' %}Choose action{% endtrans %}</option>
                                <option value="delete" title="{{ 'Delete content permanently.'|trans({}, 'messages')|e('html_attr') }}">{% trans from 'messages' %}Delete{% endtrans %}</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <input type="submit" value="{{ 'Submit'|trans({}, 'messages')|e('html_attr') }}" class="btn btn-secondary btn-sm" />
                        </div>
                    </div>
                </fieldset>
            </div>
        </form>
        {% endif %}

        {{ block('display_hooks') }}
    </div>
{% endblock %}
{% block display_hooks %}
    {# here you can activate calling display hooks for the view page if you need it #}
    {# % if routeArea != 'admin' %}
        {% set hooks = notifyDisplayHooks(eventName='paustianmelodymixermodule.ui_hooks.levels.display_view', urlObject=currentUrlObject, outputAsArray=true) %}
        {% if hooks is iterable and hooks|length > 0 %}
            {% for area, hook in hooks %}
                <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
            {% endfor %}
        {% endif %}
    {% endif % #}
{% endblock %}
