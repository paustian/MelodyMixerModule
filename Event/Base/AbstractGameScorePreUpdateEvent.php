<?php

/**
 * MelodyMixer.
 *
 * @copyright Timothy Paustian (Paustian)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Timothy Paustian <tdpaustian@gmail.com>.
 * @see https://www.microbiologytextbook.com
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Paustian\MelodyMixerModule\Event\Base;

use Paustian\MelodyMixerModule\Entity\GameScoreEntity;

/**
 * Event base class for filtering game score processing.
 */
class AbstractGameScorePreUpdateEvent
{
    /**
     * @var GameScoreEntity Reference to treated entity instance.
     */
    protected $gameScore;

    /**
     * @var array Entity change set for preUpdate events.
     */
    protected $entityChangeSet = [];

    public function __construct(GameScoreEntity $gameScore, array $entityChangeSet = [])
    {
        $this->gameScore = $gameScore;
        $this->entityChangeSet = $entityChangeSet;
    }

    /**
     * @return GameScoreEntity
     */
    public function getGameScore(): GameScoreEntity
    {
        return $this->gameScore;
    }

    /**
     * @return array Entity change set
     */
    public function getEntityChangeSet(): array
    {
        return $this->entityChangeSet;
    }

    /**
     * @param array $changeSet Entity change set
     */
    public function setEntityChangeSet(array $changeSet = []): void
    {
        $this->entityChangeSet = $changeSet;
    }
}
