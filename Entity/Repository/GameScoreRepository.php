<?php

/**
 * MelodyMixer.
 *
 * @copyright Timothy Paustian (Paustian)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Timothy Paustian <tdpaustian@gmail.com>.
 * @see https://www.microbiologytextbook.com
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Paustian\MelodyMixerModule\Entity\Repository;

use Paustian\MelodyMixerModule\Entity\GameScoreEntity;
use Paustian\MelodyMixerModule\Entity\Repository\Base\AbstractGameScoreRepository;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for game score entities.
 */
class GameScoreRepository extends AbstractGameScoreRepository
{
    // feel free to add your own methods here, like for example reusable DQL queries
    public function findUser(int $uid) : ?GameScoreEntity
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select(array('tbl'))
            ->from($this->mainEntityClass, 'tbl')
            ->where($qb->expr()->eq('tbl.PlayerUid_id', '?1'))
            ->setParameter(1,  $uid);
        $result =  $this->getQueryFromBuilder($qb)->getResult();
        if(count($result) > 0){
            return $result[0];
        } else {
            return null;
        }
    }
}
